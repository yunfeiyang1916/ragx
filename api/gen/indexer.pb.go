// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: indexer.proto

package gen

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadIndexerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnowledgeName string                 `protobuf:"bytes,1,opt,name=knowledge_name,json=knowledgeName,proto3" json:"knowledge_name,omitempty"`
	Uri           string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadIndexerRequest) Reset() {
	*x = UploadIndexerRequest{}
	mi := &file_indexer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadIndexerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadIndexerRequest) ProtoMessage() {}

func (x *UploadIndexerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadIndexerRequest.ProtoReflect.Descriptor instead.
func (*UploadIndexerRequest) Descriptor() ([]byte, []int) {
	return file_indexer_proto_rawDescGZIP(), []int{0}
}

func (x *UploadIndexerRequest) GetKnowledgeName() string {
	if x != nil {
		return x.KnowledgeName
	}
	return ""
}

func (x *UploadIndexerRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type UploadIndexerReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocIds        []string               `protobuf:"bytes,1,rep,name=doc_ids,json=docIds,proto3" json:"doc_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadIndexerReply) Reset() {
	*x = UploadIndexerReply{}
	mi := &file_indexer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadIndexerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadIndexerReply) ProtoMessage() {}

func (x *UploadIndexerReply) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadIndexerReply.ProtoReflect.Descriptor instead.
func (*UploadIndexerReply) Descriptor() ([]byte, []int) {
	return file_indexer_proto_rawDescGZIP(), []int{1}
}

func (x *UploadIndexerReply) GetDocIds() []string {
	if x != nil {
		return x.DocIds
	}
	return nil
}

var File_indexer_proto protoreflect.FileDescriptor

const file_indexer_proto_rawDesc = "" +
	"\n" +
	"\rindexer.proto\x12\x03gen\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17validate/validate.proto\x1a\fcommon.proto\"O\n" +
	"\x14UploadIndexerRequest\x12%\n" +
	"\x0eknowledge_name\x18\x01 \x01(\tR\rknowledgeName\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\"-\n" +
	"\x12UploadIndexerReply\x12\x17\n" +
	"\adoc_ids\x18\x01 \x03(\tR\x06docIds2s\n" +
	"\x0eIndexerService\x12a\n" +
	"\rUploadIndexer\x12\x19.gen.UploadIndexerRequest\x1a\x17.gen.UploadIndexerReply\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/api/v1/indexer(\x01BQ\n" +
	"\acom.genB\fIndexerProtoP\x01Z\fragx/api/gen\xa2\x02\x03GXX\xaa\x02\x03Gen\xca\x02\x03Gen\xe2\x02\x0fGen\\GPBMetadata\xea\x02\x03Genb\x06proto3"

var (
	file_indexer_proto_rawDescOnce sync.Once
	file_indexer_proto_rawDescData []byte
)

func file_indexer_proto_rawDescGZIP() []byte {
	file_indexer_proto_rawDescOnce.Do(func() {
		file_indexer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indexer_proto_rawDesc), len(file_indexer_proto_rawDesc)))
	})
	return file_indexer_proto_rawDescData
}

var file_indexer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_indexer_proto_goTypes = []any{
	(*UploadIndexerRequest)(nil), // 0: gen.UploadIndexerRequest
	(*UploadIndexerReply)(nil),   // 1: gen.UploadIndexerReply
}
var file_indexer_proto_depIdxs = []int32{
	0, // 0: gen.IndexerService.UploadIndexer:input_type -> gen.UploadIndexerRequest
	1, // 1: gen.IndexerService.UploadIndexer:output_type -> gen.UploadIndexerReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_indexer_proto_init() }
func file_indexer_proto_init() {
	if File_indexer_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indexer_proto_rawDesc), len(file_indexer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_indexer_proto_goTypes,
		DependencyIndexes: file_indexer_proto_depIdxs,
		MessageInfos:      file_indexer_proto_msgTypes,
	}.Build()
	File_indexer_proto = out.File
	file_indexer_proto_goTypes = nil
	file_indexer_proto_depIdxs = nil
}
